#
# @title Build and Commit
# @since 2018/08/07
# @author fujisawa-shin
#

version: 2

defaults: &defaults
  docker:
    - image: circleci/node:12.4-browsers
  working_directory: ~/app
  environment:
    INSTALL_COMMAND: "npm install"
    TEST_COMMAND: "npm test"
    BUILD_COMMAND: "npm run build"
    DOC_ROOT: "dist"
    BUILD_BRANCHI_POSTFIX: "build"

jobs:
  test:
    <<: *defaults
    steps:
      - checkout
      - restore_cache:
        key: dependency-cache-{{ checksum "package-lock.json" }}
      - run:
        name: "npm install"
        command: $INSTALL_COMMAND
      - save_cache:
        key: dependency-cache-{{ checksum "package-lock.json" }}
        paths:
          - node_modules
      - run:
          name: "test"
          command: $TEST_COMMAND

  build_and_commit:
    <<: *defaults
    steps:
      - checkout
      - add_ssh_keys:
          fingerprints:
            - "46:09:58:e1:9d:bc:73:66:d7:6d:85:75:15:45:71:23"
      - run:
          name: "git config"
          command: |
            git config --global user.email "circleci@example.com"
            git config --global user.name "circleci"
            git config --global push.default simple
      - run:
          name: "setup branch"
          command: |
            git fetch origin
            git checkout $CIRCLE_BRANCH-$BUILD_BRANCHI_POSTFIX
            git merge $CIRCLE_BRANCH --no-ff -m "merge $CIRCLE_BRANCH"
      - restore_cache:
          key: dependency-cache-{{ checksum "package-lock.json" }}
      - run:
          name: "npm install"
          command: $INSTALL_COMMAND
      - save_cache:
          key: dependency-cache-{{ checksum "package-lock.json" }}
          paths:
            - node_modules
      - run:
          name: "build"
          command: $BUILD_COMMAND
      - run:
          name: "git add"
          command: "git add $DOC_ROOT"
      - run:
          name: "git commit"
          command: |
            set +o pipefail
            git commit -m 'build' | true
      - run:
          name: "git push"
          command: "git push origin $CIRCLE_BRANCH-$BUILD_BRANCHI_POSTFIX"
      - run:
          name: "tagging"
          command: |
            v=`node -e "console.log(JSON.parse(require('fs').readFileSync('package.json','utf8')).version)"`
            git tag v$v && git push --tags || echo "existing tag v$v"

  npm_release:
    <<: *defaults
    steps:
      - checkout
      - run:
        name: Authenticate with registry
        command: echo "//registry.npmjs.org/:_authToken=$npm_TOKEN" > ~/app/.npmrc
      - run:
        name: Publish package
        command: npm publish

workflows:
  version: 2
  build_deploy:
    jobs:
      - test:
        branches:
          ignore: /-build$/
      - build_and_commit:
          requires:
            - test
          filters:
            branches:
              only:
                - master
      - npm_release:
          filters:
            tags:
              only: /^v.*/
            branches:
              ignore: /.*/